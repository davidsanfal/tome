name: Testing Tome

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install .[dev]
      - name: Run tests with coverage
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install .[dev]
          coverage run -m pytest -v tests/
          coverage report

  docs:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install docs dependencies
        run: pip install .[docs]
      - name: Build documentation
        run: mkdocs build --verbose

  static-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install tools
        run: pip install ruff vulture bandit[toml] detect-secrets
      - name: Run Ruff
        run: ruff format --check --no-cache
      - name: Run Vulture
        run: vulture tome/
      - name: Run Bandit
        run: bandit -c pyproject.toml tome -r -lll
      - name: Run Detect-Secrets
        run: detect-secrets -C tome scan
